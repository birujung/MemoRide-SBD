{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from '../utils/config';\n\n// Action types\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n\n// Login action\nexport const login = (setUser, loginData) => {\n  return axios.post(`${BASE_URL}/auth/login`, loginData).then(response => {\n    // Handle successful login\n    console.log(response.data.user);\n    setUser(response.data.user);\n  }).catch(error => {\n    // Handle login failure\n    throw error;\n  });\n};\n\n// Register action\nexport const register = (setUser, registerData) => {\n  return axios.post(`${BASE_URL}/auth/register`, registerData).then(response => {\n    // Handle successful registration\n    console.log(response.data.user);\n    setUser(response.data.user);\n  }).catch(error => {\n    // Handle registration failure\n    throw error;\n  });\n};\n\n// Logout action\nexport const logout = setUser => {\n  if (typeof setUser === \"function\") {\n    // Handle logout\n    setUser(null);\n    // You can also clear the authentication token or perform other necessary operations here\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT","login","setUser","loginData","post","then","response","console","log","data","user","catch","error","register","registerData","logout"],"sources":["/Users/tunjung/coding/MemoRide-SBD/frontend/src/context/AuthController.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL } from '../utils/config';\n\n// Action types\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n\n// Login action\nexport const login = (setUser, loginData) => {\n  return axios\n    .post(`${BASE_URL}/auth/login`, loginData)\n    .then((response) => {\n      // Handle successful login\n      console.log(response.data.user);\n      setUser(response.data.user);\n    })\n    .catch((error) => {\n      // Handle login failure\n      throw error;\n    });\n};\n\n// Register action\nexport const register = (setUser, registerData) => {\n  return axios\n    .post(`${BASE_URL}/auth/register`, registerData)\n    .then((response) => {\n      // Handle successful registration\n      console.log(response.data.user);\n      setUser(response.data.user);\n    })\n    .catch((error) => {\n      // Handle registration failure\n      throw error;\n    });\n};\n\n// Logout action\nexport const logout = (setUser) => {\n  if (typeof setUser === \"function\") {\n    // Handle logout\n    setUser(null);\n    // You can also clear the authentication token or perform other necessary operations here\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;;AAE1C;AACA,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAK;EAC3C,OAAOT,KAAK,CACTU,IAAI,CAAE,GAAET,QAAS,aAAY,EAAEQ,SAAS,CAAC,CACzCE,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;IAC/BR,OAAO,CAACI,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;EAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChB;IACA,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACX,OAAO,EAAEY,YAAY,KAAK;EACjD,OAAOpB,KAAK,CACTU,IAAI,CAAE,GAAET,QAAS,gBAAe,EAAEmB,YAAY,CAAC,CAC/CT,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;IAC/BR,OAAO,CAACI,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;EAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChB;IACA,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMG,MAAM,GAAIb,OAAO,IAAK;EACjC,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;IACjC;IACAA,OAAO,CAAC,IAAI,CAAC;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}