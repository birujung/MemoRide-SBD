{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from \".\";\n\n// Action types\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n\n// Login action\nexport const login = async (dispatch, loginData) => {\n  dispatch({\n    type: LOGIN_START\n  });\n  try {\n    // Perform login request\n    const response = await axios.post('${BASE_URL}/auth/login', loginData);\n\n    // Handle successful login\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data.user\n    });\n    // You can also store the authentication token or perform other necessary operations here\n  } catch (error) {\n    // Handle login failure\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n  }\n};\n\n// Register action\nexport const register = async (dispatch, registerData) => {\n  dispatch({\n    type: LOGIN_START\n  });\n  try {\n    // Perform registration request\n    const response = await axios.post('${BASE_URL}/auth/register', registerData);\n\n    // Handle successful registration\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    // You can perform any additional actions after successful registration\n  } catch (error) {\n    // Handle registration failure\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n  }\n};\n\n// Logout action\nexport const logout = dispatch => {\n  // Handle logout\n  dispatch({\n    type: LOGOUT\n  });\n  // You can also clear the authentication token or perform other necessary operations here\n};","map":{"version":3,"names":["axios","BASE_URL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT","login","dispatch","loginData","type","response","post","payload","data","user","error","message","register","registerData","logout"],"sources":["/Users/tunjung/coding/MemoRide-SBD/frontend/src/context/AuthController.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL } from \".\";\n\n// Action types\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n\n// Login action\nexport const login = async (dispatch, loginData) => {\n  dispatch({ type: LOGIN_START });\n\n  try {\n    // Perform login request\n    const response = await axios.post('${BASE_URL}/auth/login', loginData);\n\n    // Handle successful login\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data.user });\n    // You can also store the authentication token or perform other necessary operations here\n  } catch (error) {\n    // Handle login failure\n    dispatch({ type: LOGIN_FAILURE, payload: error.message });\n  }\n};\n\n// Register action\nexport const register = async (dispatch, registerData) => {\n  dispatch({ type: LOGIN_START });\n\n  try {\n    // Perform registration request\n    const response = await axios.post('${BASE_URL}/auth/register', registerData);\n\n    // Handle successful registration\n    dispatch({ type: REGISTER_SUCCESS });\n    // You can perform any additional actions after successful registration\n  } catch (error) {\n    // Handle registration failure\n    dispatch({ type: LOGIN_FAILURE, payload: error.message });\n  }\n};\n\n// Logout action\nexport const logout = (dispatch) => {\n  // Handle logout\n  dispatch({ type: LOGOUT });\n  // You can also clear the authentication token or perform other necessary operations here\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,GAAG;;AAE5B;AACA,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;EAClDD,QAAQ,CAAC;IAAEE,IAAI,EAAER;EAAY,CAAC,CAAC;EAE/B,IAAI;IACF;IACA,MAAMS,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,wBAAwB,EAAEH,SAAS,CAAC;;IAEtE;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAEP,aAAa;MAAEU,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACC;IAAK,CAAC,CAAC;IAC9D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAR,QAAQ,CAAC;MAAEE,IAAI,EAAEN,aAAa;MAAES,OAAO,EAAEG,KAAK,CAACC;IAAQ,CAAC,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOV,QAAQ,EAAEW,YAAY,KAAK;EACxDX,QAAQ,CAAC;IAAEE,IAAI,EAAER;EAAY,CAAC,CAAC;EAE/B,IAAI;IACF;IACA,MAAMS,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,2BAA2B,EAAEO,YAAY,CAAC;;IAE5E;IACAX,QAAQ,CAAC;MAAEE,IAAI,EAAEL;IAAiB,CAAC,CAAC;IACpC;EACF,CAAC,CAAC,OAAOW,KAAK,EAAE;IACd;IACAR,QAAQ,CAAC;MAAEE,IAAI,EAAEN,aAAa;MAAES,OAAO,EAAEG,KAAK,CAACC;IAAQ,CAAC,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,MAAM,GAAIZ,QAAQ,IAAK;EAClC;EACAA,QAAQ,CAAC;IAAEE,IAAI,EAAEJ;EAAO,CAAC,CAAC;EAC1B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}