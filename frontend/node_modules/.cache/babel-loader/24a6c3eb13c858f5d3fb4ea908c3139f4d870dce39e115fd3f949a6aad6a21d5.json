{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT } from \"./context/AuthController\";\nconst initialState = {\n  user: {\n    user: undefined\n  }\n};\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","initialState","user","undefined","userReducer","state","arguments","length","action","type","payload"],"sources":["/Users/tunjung/coding/MemoRide-SBD/frontend/src/reducers.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT } from \"./context/AuthController\";\n\nconst initialState = {\n  user: { user: undefined },\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,MAAM,QAAQ,0BAA0B;AAEhE,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;IAAEA,IAAI,EAAEC;EAAU;AAC1B,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAH,SAAA,GAAAG,SAAA,MAAGL,YAAY;EAAA,IAAEO,MAAM,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAH,SAAA;EAC/C,QAAQK,MAAM,CAACC,IAAI;IACjB,KAAKV,aAAa;MAChB,OAAO;QACL,GAAGM,KAAK;QACRH,IAAI,EAAEM,MAAM,CAACE;MACf,CAAC;IACH,KAAKV,MAAM;MACT,OAAO;QACL,GAAGK,KAAK;QACRH,IAAI,EAAE;MACR,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}