{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from '../utils/config';\n\n// Action types\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n\n// Login action\nexport const login = (dispatch, loginData) => {\n  dispatch({\n    type: LOGIN_START\n  });\n  return axios.post(`${BASE_URL}/auth/login`, loginData).then(response => {\n    // Handle successful login\n    console.log(response.data.user);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data.user\n    });\n  }).catch(error => {\n    // Handle login failure\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n    throw error;\n  });\n};\n\n// Register action\nexport const register = (dispatch, registerData) => {\n  dispatch({\n    type: LOGIN_START\n  });\n  return axios.post(`${BASE_URL}/auth/register`, registerData).then(response => {\n    // Handle successful registration\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n  }).catch(error => {\n    // Handle registration failure\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n    throw error;\n  });\n};\n\n// Logout action\nexport const logout = dispatch => {\n  if (typeof dispatch === \"function\") {\n    // Handle logout\n    dispatch({\n      type: LOGOUT\n    });\n    // You can also clear the authentication token or perform other necessary operations here\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT","login","dispatch","loginData","type","post","then","response","console","log","data","user","payload","catch","error","message","register","registerData","logout"],"sources":["/Users/tunjung/coding/MemoRide-SBD/frontend/src/context/AuthController.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL } from '../utils/config';\n\n// Action types\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n\n// Login action\nexport const login = (dispatch, loginData) => {\n  dispatch({ type: LOGIN_START });\n\n  return axios\n    .post(`${BASE_URL}/auth/login`, loginData)\n    .then((response) => {\n      // Handle successful login\n      console.log(response.data.user);\n      dispatch({ type: LOGIN_SUCCESS, payload: response.data.user });\n    })\n    .catch((error) => {\n      // Handle login failure\n      dispatch({ type: LOGIN_FAILURE, payload: error.message });\n      throw error;\n    });\n};\n\n// Register action\nexport const register = (dispatch, registerData) => {\n  dispatch({ type: LOGIN_START });\n\n  return axios\n    .post(`${BASE_URL}/auth/register`, registerData)\n    .then((response) => {\n      // Handle successful registration\n      dispatch({ type: REGISTER_SUCCESS });\n    })\n    .catch((error) => {\n      // Handle registration failure\n      dispatch({ type: LOGIN_FAILURE, payload: error.message });\n      throw error;\n    });\n};\n\n// Logout action\nexport const logout = (dispatch) => {\n  if (typeof dispatch === \"function\") {\n    // Handle logout\n    dispatch({ type: LOGOUT });\n    // You can also clear the authentication token or perform other necessary operations here\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;;AAE1C;AACA,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;EAC5CD,QAAQ,CAAC;IAAEE,IAAI,EAAER;EAAY,CAAC,CAAC;EAE/B,OAAOF,KAAK,CACTW,IAAI,CAAE,GAAEV,QAAS,aAAY,EAAEQ,SAAS,CAAC,CACzCG,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;IAC/BT,QAAQ,CAAC;MAAEE,IAAI,EAAEP,aAAa;MAAEe,OAAO,EAAEL,QAAQ,CAACG,IAAI,CAACC;IAAK,CAAC,CAAC;EAChE,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChB;IACAZ,QAAQ,CAAC;MAAEE,IAAI,EAAEN,aAAa;MAAEc,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;IACzD,MAAMD,KAAK;EACb,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAGA,CAACd,QAAQ,EAAEe,YAAY,KAAK;EAClDf,QAAQ,CAAC;IAAEE,IAAI,EAAER;EAAY,CAAC,CAAC;EAE/B,OAAOF,KAAK,CACTW,IAAI,CAAE,GAAEV,QAAS,gBAAe,EAAEsB,YAAY,CAAC,CAC/CX,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACAL,QAAQ,CAAC;MAAEE,IAAI,EAAEL;IAAiB,CAAC,CAAC;EACtC,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;IAChB;IACAZ,QAAQ,CAAC;MAAEE,IAAI,EAAEN,aAAa;MAAEc,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;IACzD,MAAMD,KAAK;EACb,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMI,MAAM,GAAIhB,QAAQ,IAAK;EAClC,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IAClC;IACAA,QAAQ,CAAC;MAAEE,IAAI,EAAEJ;IAAO,CAAC,CAAC;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}