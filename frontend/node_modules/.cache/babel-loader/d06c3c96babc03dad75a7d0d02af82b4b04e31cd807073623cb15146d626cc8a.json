{"ast":null,"code":"var _jsxFileName = \"/Users/tunjung/coding/MemoRide-SBD/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'remixicon/fonts/remixicon.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { AuthContextProvider, LOGIN_START, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_SUCCESS, LOGOUT } from './AuthController';\nimport { BASE_URL } from './utils/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = BASE_URL;\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response.status === 401) {\n    // Handle unauthorized access or token expiration here\n  }\n  return Promise.reject(error);\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n      loginAction: login,\n      registerAction: register,\n      logoutAction: logout,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this));\n\n// Login action\nconst login = async (dispatch, loginData) => {\n  dispatch({\n    type: LOGIN_START\n  });\n  try {\n    // Perform login request\n    const response = await axios.post('/auth/login', loginData);\n\n    // Handle successful login\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data.user\n    });\n    // You can also store the authentication token or perform other necessary operations here\n  } catch (error) {\n    // Handle login failure\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n  }\n};\n\n// Register action\nconst register = async (dispatch, registerData) => {\n  dispatch({\n    type: LOGIN_START\n  });\n  try {\n    // Perform registration request\n    const response = await axios.post('/auth/register', registerData);\n\n    // Handle successful registration\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    // You can perform any additional actions after successful registration\n  } catch (error) {\n    // Handle registration failure\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n  }\n};\n\n// Logout action\nconst logout = dispatch => {\n  // Handle logout\n  dispatch({\n    type: LOGOUT\n  });\n  // You can also clear the authentication token or perform other necessary operations here\n};","map":{"version":3,"names":["React","ReactDOM","axios","BrowserRouter","App","AuthContextProvider","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_SUCCESS","LOGOUT","BASE_URL","jsxDEV","_jsxDEV","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","root","createRoot","document","getElementById","render","StrictMode","children","loginAction","login","registerAction","register","logoutAction","logout","fileName","_jsxFileName","lineNumber","columnNumber","dispatch","loginData","type","post","payload","data","user","message","registerData"],"sources":["/Users/tunjung/coding/MemoRide-SBD/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'remixicon/fonts/remixicon.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport {\n  AuthContextProvider,\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  REGISTER_SUCCESS,\n  LOGOUT,\n} from './AuthController';\n\nimport { BASE_URL } from './utils/config';\n\naxios.defaults.baseURL = BASE_URL;\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      // Handle unauthorized access or token expiration here\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthContextProvider\n        loginAction={login}\n        registerAction={register}\n        logoutAction={logout}\n      >\n        <App />\n      </AuthContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// Login action\nconst login = async (dispatch, loginData) => {\n  dispatch({ type: LOGIN_START });\n\n  try {\n    // Perform login request\n    const response = await axios.post('/auth/login', loginData);\n\n    // Handle successful login\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data.user });\n    // You can also store the authentication token or perform other necessary operations here\n  } catch (error) {\n    // Handle login failure\n    dispatch({ type: LOGIN_FAILURE, payload: error.message });\n  }\n};\n\n// Register action\nconst register = async (dispatch, registerData) => {\n  dispatch({ type: LOGIN_START });\n\n  try {\n    // Perform registration request\n    const response = await axios.post('/auth/register', registerData);\n\n    // Handle successful registration\n    dispatch({ type: REGISTER_SUCCESS });\n    // You can perform any additional actions after successful registration\n  } catch (error) {\n    // Handle registration failure\n    dispatch({ type: LOGIN_FAILURE, payload: error.message });\n  }\n};\n\n// Logout action\nconst logout = (dispatch) => {\n  // Handle logout\n  dispatch({ type: LOGOUT });\n  // You can also clear the authentication token or perform other necessary operations here\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}